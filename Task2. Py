{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMRc+16L3CQiwUeM98g/dFu",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RaunakGupta01/Codtech-Task/blob/main/Task2.%20Py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "BKKxXMcuMLRL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0f4fada1-5182-4ae3-c75c-05545b991b7a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter the number of subjects: 5\n",
            "Enter subject name: Chemistry\n",
            "Enter Marks to show grade for Chemistry: 73\n",
            "Enter subject name: Physics\n",
            "Enter Marks to show grade for Physics: 69\n",
            "Enter subject name: Math\n",
            "Enter Marks to show grade for Math: 96\n",
            "Enter subject name: English\n",
            "Enter Marks to show grade for English: 60\n",
            "Enter subject name: Computer science\n",
            "Enter Marks to show grade for Computer science: 93\n",
            "\n",
            "--- Student Grade Report ---\n",
            "Subjects: Chemistry, Physics, Math, English, Computer science\n",
            "Average Grade: 78.20\n",
            "Letter Grade: C\n",
            "GPA: 2.00\n"
          ]
        }
      ],
      "source": [
        "\n",
        "class StudentGrades:\n",
        "    def __init__(self):\n",
        "        self.grades = {}\n",
        "\n",
        "    def input_grades(self):\n",
        "        num_subjects =int (input(\"Enter the number of subjects: \"))\n",
        "        for _ in range(num_subjects):\n",
        "            subject = input(\"Enter subject name: \")\n",
        "            grade =float(input(f\"Enter Marks to show grade for {subject}: \"))\n",
        "            self.grades[subject] = grade\n",
        "\n",
        "    def calculate_average(self):\n",
        "        if not self.grades:\n",
        "            return 0\n",
        "        return sum(self.grades.values()) / len(self.grades)\n",
        "\n",
        "    def get_letter_grade(self, average):\n",
        "        if average >= 90:\n",
        "            return 'A'\n",
        "        elif average >= 80:\n",
        "            return 'B'\n",
        "        elif average >= 70:\n",
        "            return 'C'\n",
        "        elif average >= 60:\n",
        "            return 'D'\n",
        "        else:\n",
        "            return 'F'\n",
        "\n",
        "    def calculate_gpa(self, average):\n",
        "        if average >= 90:\n",
        "            return 4.0\n",
        "        elif average >= 80:\n",
        "            return 3.0\n",
        "        elif average >= 70:\n",
        "            return 2.0\n",
        "        elif average >= 60:\n",
        "            return 1.0\n",
        "        else:\n",
        "            return 0.0\n",
        "\n",
        "    def display_results(self):\n",
        "        average = self.calculate_average()\n",
        "        letter_grade = self.get_letter_grade(average)\n",
        "        gpa = self.calculate_gpa(average)\n",
        "\n",
        "        print(\"\\n--- Student Grade Report ---\")\n",
        "        print(f\"Subjects: {', '.join(self.grades.keys())}\")\n",
        "        print(f\"Average Grade: {average:.2f}\")\n",
        "        print(f\"Letter Grade: {letter_grade}\")\n",
        "        print(f\"GPA: {gpa:.2f}\")\n",
        "\n",
        "def main():\n",
        "    student = StudentGrades()\n",
        "\n",
        "    # Input grades from the user\n",
        "    student.input_grades()\n",
        "\n",
        "    # Display the results\n",
        "    student.display_results()\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ]
    }
  ]
}